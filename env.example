# ===========================
#  Hotel Management API
#  Environment Configuration
# ===========================

# MongoDB Atlas Connection String
# Replace <username>, <password>, <cluster-name>, and <database-name> with your actual MongoDB Atlas details
MONGO_URI=mongodb+srv://<username>:<password>@<cluster-name>.mongodb.net/<database-name>?retryWrites=true&w=majority

# Application Port
PORT=3000

# JWT Secret Key
# Use a strong, random string in your real .env file
JWT_SECRET=your_jwt_secret_key_here

# (Optional) Environment Mode
# Example values: development | production
NODE_ENV=development


# Example Requests for rooms in (Postman or Frontend)

# Postman End Point 
 API Rooms endpoint: http://localhost:3000/api/rooms
 API Guests endpoint: http://localhost:3000/api/guests
 API Booking endpoint: http://localhost:3000/api/bookings

# Search room by number, available, date
http://localhost:3002/api/rooms?type=double&minPrice=2000&maxPrice=4000&checkIn=2025-10-20&checkOut=2025-10-25&search=10&page=1&limit=5

# Search room by date checkIn & checkOut
http://localhost:3002/api/rooms?checkIn=2025-10-20&checkOut=2025-10-25

# Search room by room number
http://localhost:3002/api/rooms?search=201

# Search room by Filter + Pagination
http://localhost:3002/api/rooms?type=double&status=available&page=1&limit=5

# Postman testing to check if the room is available or not
http://localhost:3000/api/bookings?roomId=68f0d0373617ef05356068ab

# Postman testing to check who is the guest of the room
http://localhost:3000/api/bookings?guestId=68f0d0373617ef05356068bd&checkIn=2025-10-20&checkOut=2025-10-25

# Postman rooms check price
http://localhost:3000/api/rooms?price